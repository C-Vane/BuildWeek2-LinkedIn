[{"C:\\Users\\orifj\\Documents\\Aysakov\\build-week2\\Build-Week-LinkedIn-Clone\\linkedin-clone\\src\\App.js":"1","C:\\Users\\orifj\\Documents\\Aysakov\\build-week2\\Build-Week-LinkedIn-Clone\\linkedin-clone\\src\\Components\\SideBar.jsx":"2"},{"size":325,"mtime":1606811738097,"results":"3","hashOfConfig":"4"},{"size":4543,"mtime":1606815198303,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fdoef4",{"filePath":"8","messages":"9","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\orifj\\Documents\\Aysakov\\build-week2\\Build-Week-LinkedIn-Clone\\linkedin-clone\\src\\App.js",["11"],"C:\\Users\\orifj\\Documents\\Aysakov\\build-week2\\Build-Week-LinkedIn-Clone\\linkedin-clone\\src\\Components\\SideBar.jsx",["12","13","14","15","16","17","18"],"import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./SideBar.css\"\r\n\r\n\r\nclass SideBar extends React.Component {\r\n    state={\r\n        connectionsArray: [],\r\n    }\r\n\r\n    \r\n    getData = () =>{\r\n        fetch(\"https://striveschool-api.herokuapp.com/api/profile/ \", {\r\n        'method': 'GET',\r\n        headers: new Headers({\r\n            \"Content-type\": \"application/json\",\r\n            \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmM0YzEwNmVkMjY2ODAwMTcwZWEzZDAiLCJpYXQiOjE2MDY3MzA2MTYsImV4cCI6MTYwNzk0MDIxNn0.0SA5BuCxgs7H-mWOcIfvvED6ga9_s3jGPIvujZ4KSbA\"\r\n        })\r\n      })\r\n     .then((res) => {\r\n         return res.json()\r\n     })\r\n     .then((data) => {\r\n         console.log(\"this my data\", data)\r\n         this.setState({\r\n             connectionsArray: data\r\n         })\r\n         \r\n       })\r\n       .catch((err) => {\r\n           console.error(err)\r\n       })\r\n    }\r\n\r\n    componentDidMount=() => {\r\n        this.getData()\r\n    }\r\n    render(){\r\n        console.log(\"i set data in state so\", this.state.connectionsArray[0])\r\n        return(\r\n            <>\r\n                <div className=\"side-bar\">\r\n                    <Container className=\"side pt-3 mb-3\">\r\n                        <h4>People also viewed</h4>\r\n                        {this.state.connectionsArray.splice(0, 6).map((people) => (\r\n                            <div className=\"d-flex justify-content-between mb-2 pb-3\" style={{borderBottom: \"1px solid grey\"}}>\r\n                                <div className=\"d-flex\">\r\n                                    <Link className=\"d-flex myLink\">\r\n                                        <img className=\"image\" src={people.image}/>\r\n                                        <div className=\"d-flex flex-column\">\r\n                                            <Link className=\"name-link\">\r\n                                                <div className=\"d-flex name\">\r\n                                                    <p>{people.name}</p>\r\n                                                    <p>{people.surname}</p>\r\n                                                </div>\r\n                                            </Link>\r\n                                            <p>1st</p>\r\n                                            <p>{people.title}</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n                                <button>\r\n                                    <i class=\"fas fa-paper-plane\"></i>\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </Container>\r\n\r\n                        <Container className=\"side pt-3\">\r\n                        <h4>People you may know</h4>\r\n                        {this.state.connectionsArray.splice(11, 5).map((people) => (\r\n                                <div className=\"d-flex justify-content-between mb-2 pb-3\" style={{borderBottom: \"1px solid grey\"}}>\r\n                                    <div className=\"d-flex\">\r\n                                        <Link className=\"d-flex myLink\">\r\n                                            <img className=\"image\" src={people.image}/>\r\n                                            <div className=\"d-flex flex-column\">\r\n                                                <Link className=\"name-link\">\r\n                                                    <div className=\"d-flex name\">\r\n                                                        <p>{people.name}</p>\r\n                                                        <p>{people.surname}</p>\r\n                                                    </div>\r\n                                                </Link>\r\n                                                <p>1st</p>\r\n                                                <p>{people.title}</p>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                    <button>\r\n                                        <i class=\"fas fa-user-plus\" ></i>\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                        </Container>\r\n                        \r\n               </div>\r\n            </>   \r\n        )\r\n    }\r\n}\r\nexport default SideBar",{"ruleId":"19","severity":1,"message":"20","line":2,"column":35,"nodeType":"21","messageId":"22","endLine":2,"endColumn":40},{"ruleId":"19","severity":1,"message":"23","line":1,"column":17,"nodeType":"21","messageId":"22","endLine":1,"endColumn":26},{"ruleId":"19","severity":1,"message":"24","line":2,"column":21,"nodeType":"21","messageId":"22","endLine":2,"endColumn":24},{"ruleId":"19","severity":1,"message":"25","line":2,"column":26,"nodeType":"21","messageId":"22","endLine":2,"endColumn":29},{"ruleId":"19","severity":1,"message":"26","line":2,"column":31,"nodeType":"21","messageId":"22","endLine":2,"endColumn":36},{"ruleId":"19","severity":1,"message":"27","line":2,"column":38,"nodeType":"21","messageId":"22","endLine":2,"endColumn":44},{"ruleId":"28","severity":1,"message":"29","line":50,"column":41,"nodeType":"30","endLine":50,"endColumn":84},{"ruleId":"28","severity":1,"message":"29","line":76,"column":45,"nodeType":"30","endLine":76,"endColumn":88},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]