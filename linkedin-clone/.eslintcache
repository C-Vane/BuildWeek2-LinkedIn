[{"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/App.js":"1","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/NavBar.jsx":"2","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedLeft.jsx":"3","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedRight.jsx":"4","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Highlights.jsx":"5","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/LatestEducation.jsx":"6","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/About.jsx":"7","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Experience.jsx":"8","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Posts.jsx":"9","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/StartPost.jsx":"10","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/ExperienceItem.jsx":"11","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/AboutLoader.jsx":"12","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/EditModal.jsx":"13","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/index.js":"14","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Footer.jsx":"15","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/MainContent.jsx":"16","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/MainFeedContent.jsx":"17","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedRightFooter.jsx":"18","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/ContactInfoPopup.jsx":"19","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/EventsModal.jsx":"20","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/AddModal.jsx":"21","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/loaders/ExpEducationLoaders.jsx":"22","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/PostComments.jsx":"23","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/LatestExperience.jsx":"24","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedMostViewedCourses.jsx":"25","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Jobs.jsx":"26","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Skills.jsx":"27","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Main.jsx":"28","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/SideBar.jsx":"29","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedMiddle.jsx":"30","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Education.jsx":"31","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/ArticleModal.jsx":"32","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedAddToYourFeed.jsx":"33","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/loaders/PeopleLoaders.jsx":"34","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Learning.jsx":"35"},{"size":1798,"mtime":1607076077919,"results":"36","hashOfConfig":"37"},{"size":11967,"mtime":1606997123659,"results":"38","hashOfConfig":"37"},{"size":4142,"mtime":1606987696241,"results":"39","hashOfConfig":"37"},{"size":414,"mtime":1606987696243,"results":"40","hashOfConfig":"37"},{"size":679,"mtime":1606987696245,"results":"41","hashOfConfig":"37"},{"size":349,"mtime":1606987696246,"results":"42","hashOfConfig":"37"},{"size":585,"mtime":1606987696233,"results":"43","hashOfConfig":"37"},{"size":5741,"mtime":1606987696240,"results":"44","hashOfConfig":"37"},{"size":5137,"mtime":1606987696253,"results":"45","hashOfConfig":"37"},{"size":5228,"mtime":1606987696257,"results":"46","hashOfConfig":"37"},{"size":1082,"mtime":1606987696240,"results":"47","hashOfConfig":"37"},{"size":650,"mtime":1606987696233,"results":"48","hashOfConfig":"37"},{"size":5519,"mtime":1606987696237,"results":"49","hashOfConfig":"37"},{"size":168,"mtime":1606733863986,"results":"50","hashOfConfig":"37"},{"size":4883,"mtime":1606987696267,"results":"51","hashOfConfig":"37"},{"size":805,"mtime":1606987696249,"results":"52","hashOfConfig":"37"},{"size":869,"mtime":1606987696249,"results":"53","hashOfConfig":"37"},{"size":1972,"mtime":1606987696244,"results":"54","hashOfConfig":"37"},{"size":1673,"mtime":1606987696235,"results":"55","hashOfConfig":"37"},{"size":6681,"mtime":1606987696239,"results":"56","hashOfConfig":"37"},{"size":5411,"mtime":1606987696234,"results":"57","hashOfConfig":"37"},{"size":646,"mtime":1606987696257,"results":"58","hashOfConfig":"37"},{"size":1973,"mtime":1606987696252,"results":"59","hashOfConfig":"37"},{"size":346,"mtime":1606987696247,"results":"60","hashOfConfig":"37"},{"size":2390,"mtime":1606987696242,"results":"61","hashOfConfig":"37"},{"size":7766,"mtime":1607012102226,"results":"62","hashOfConfig":"37"},{"size":1965,"mtime":1606987696255,"results":"63","hashOfConfig":"37"},{"size":1086,"mtime":1606987696248,"results":"64","hashOfConfig":"37"},{"size":8639,"mtime":1606987696232,"results":"65","hashOfConfig":"37"},{"size":8047,"mtime":1606987696242,"results":"66","hashOfConfig":"37"},{"size":1872,"mtime":1606987696238,"results":"67","hashOfConfig":"37"},{"size":2938,"mtime":1606987696234,"results":"68","hashOfConfig":"37"},{"size":3514,"mtime":1606987696240,"results":"69","hashOfConfig":"37"},{"size":972,"mtime":1606987696259,"results":"70","hashOfConfig":"37"},{"size":2389,"mtime":1607078963481,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wdnyx2",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/App.js",["154","155","156"],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/NavBar.jsx",["157"],"import React from \"react\";\nimport {\n  Navbar,\n  Nav,\n  Image,\n  NavDropdown,\n  Row,\n  Button,\n  Container,\n  FormControl,\n  Col,\n  Modal,\n  Card,\n  ListGroup,\n} from \"react-bootstrap\";\nimport ProfilePicture from \"../assets/profilepicture.PNG\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBell,\n  faBriefcase,\n  faCertificate,\n  faChartBar,\n  faChevronCircleDown,\n  faCommentDots,\n  faCompress,\n  faHome,\n  faInfo,\n  faMoneyBill,\n  faPlay,\n  faTh,\n  faUserFriends,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./style/NavFooter.css\";\n\nclass NavBar extends React.Component {\n  state = {\n    show: false,\n    name: \"Aaron Rizhik\",\n    jobTitle: \"React Developer\",\n    userID: \"5fc4c48fed266800170ea3d8\",\n  };\n  handleClose = () => this.setState({ show: false });\n  handleShow = () => this.setState({ show: true });\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.name !== prevProps.name) {\n      this.setState({\n        name: this.props.name,\n        jobTitle: this.props.jobtitle,\n        userID: this.props.userID,\n      });\n    }\n  };\n\n  render() {\n    const { pathname } = this.props.location;\n    return (\n      <div id=\"navbar\">\n        <Navbar collapseOnSelect expand=\"md\" bg=\"light\" variant=\"light\">\n          <Container>\n            <Link to=\"/feed\">\n              <Image\n                src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\"\n                id=\"logo\"\n                rounded\n              />\n            </Link>\n            <Navbar.Toggle\n              aria-controls=\"responsive-navbar-nav\"\n              style={{ position: \"fixed\", right: \"30px\", top: \"10px\" }}\n            />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  className=\" mr-sm-2\"\n                />\n              </Nav>\n              <Nav className=\"ml-auto d-flex align-items-center\">\n                <Link to=\"/feed\">\n                  <div\n                    className={\n                      pathname === \"/feed\" ? \"nav-link active\" : \"nav-link\"\n                    }\n                  >\n                    <FontAwesomeIcon icon={faHome} size=\"lg\" />\n                    <small>Home</small>\n                  </div>\n                </Link>\n                <Link to=\"/network\">\n                  <div\n                    className={\n                      pathname === \"/network\" ? \"nav-link active\" : \"nav-link\"\n                    }\n                  >\n                    <FontAwesomeIcon icon={faUserFriends} size=\"lg\" />\n                    <small>My Network</small>\n                  </div>\n                </Link>\n                <Link to=\"./jobs\">\n                  <div\n                    className={\n                      pathname === \"/jobs\" ? \"nav-link active\" : \"nav-link\"\n                    }\n                  >\n                    <FontAwesomeIcon icon={faBriefcase} size=\"lg\" />\n                    <small>Jobs</small>\n                  </div>\n                </Link>\n                <Link to=\"/messeging\">\n                  <div\n                    className={\n                      pathname === \"/messeging\" ? \"nav-link active\" : \"nav-link\"\n                    }\n                  >\n                    <FontAwesomeIcon icon={faCommentDots} size=\"lg\" />\n                    <small>Messaging</small>\n                  </div>\n                </Link>\n                <Link to=\"/notifications\">\n                  <div\n                    className={\n                      pathname === \"/notifications\"\n                        ? \"nav-link active\"\n                        : \"nav-link\"\n                    }\n                  >\n                    <FontAwesomeIcon icon={faBell} size=\"lg\" />\n                    <small>Notifications</small>\n                  </div>\n                </Link>\n                <div id=\"dropdown\" className=\"ml-3 text-center\">\n                  <Image\n                    style={{ width: \"20px\", height: \"25px\" }}\n                    className=\"pt-1\"\n                    src={ProfilePicture}\n                    roundedCircle\n                  />\n                  <NavDropdown title=\"Me\" id=\"basic-nav-dropdown\">\n                    <div className=\"dropdown-item\">\n                      <div>\n                        <div className=\"d-flex justify-content-start align-items-center\">\n                          <Image\n                            style={{ maxWidth: \"50px\", maxHeight: \"50px\" }}\n                            src={ProfilePicture}\n                            roundedCircle\n                            className=\"mr-1\"\n                          />\n                          <div className=\"d-flex flex-column align-items-start justify-content-start\">\n                            <h6 className=\"mb-0\">{this.state.name}</h6>\n                            <small className=\"mt-0\">\n                              {this.state.jobTitle}\n                            </small>\n                          </div>\n                        </div>\n                        <div className=\"mt-3\" style={{ height: 28 }}>\n                          <Link to={\"/profile/\" + `${this.state.userID}`}>\n                            <Button\n                              variant=\"outline-primary\"\n                              className=\"rounded-pill\"\n                            >\n                              View Profile\n                            </Button>\n                          </Link>\n                        </div>\n                      </div>\n                      <NavDropdown.Divider />\n                      <h6>Account</h6>\n                      <Link to=\"/settings\">\n                        <div\n                          className={\n                            pathname === \"/settings\"\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                        >\n                          <p>Setting & Privacy</p>\n                        </div>\n                      </Link>\n                      <Link to=\"/help\">\n                        <div\n                          className={\n                            pathname === \"/help\"\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                        >\n                          <p>Help</p>\n                        </div>\n                      </Link>\n                      <Link to=\"/language\">\n                        <div\n                          className={\n                            pathname === \"/language\"\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                        >\n                          <p>Language</p>\n                        </div>\n                      </Link>\n                      <NavDropdown.Divider />\n                      <h6>Manage</h6>\n                      <Link to=\"/posts\">\n                        <div\n                          className={\n                            pathname === \"/posts\"\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                        >\n                          <p>Posts & Activity</p>\n                        </div>\n                      </Link>\n                      <Link to=\"/jobPosting\">\n                        <div\n                          className={\n                            pathname === \"/jobPosting\"\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                        >\n                          <p>Job Posting Account</p>\n                        </div>\n                      </Link>\n                      <NavDropdown.Divider />\n                      <Link to=\"/signOut\">\n                        <div\n                          className={\n                            pathname === \"/signOut\"\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                        >\n                          <p>Sign Out</p>\n                        </div>\n                      </Link>\n                    </div>\n                  </NavDropdown>\n                </div>\n\n                <div\n                  className={\n                    pathname === \"/signOut\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  id=\"work-modal\"\n                  onClick={this.handleShow}\n                >\n                  <FontAwesomeIcon icon={faTh} size=\"lg\" />\n                  <small>Work</small>\n                </div>\n\n                <Link to=\"/learning\">\n                  <div\n                    className={\n                      pathname === \"/learning\"\n                        ? \"nav-link active p-2\"\n                        : \"nav-link p-2\"\n                    }\n                  >\n                    <div id=\"learning\">\n                      <FontAwesomeIcon icon={faPlay} size=\"sm\" />\n                    </div>\n                    <small>Learning</small>\n                  </div>\n                </Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n\n        <Modal\n          show={this.state.show}\n          onHide={this.handleClose}\n          className=\"modal-dialog-scrollable\"\n        >\n          <Modal.Body>\n            <Card style={{ width: \"20rem\" }}>\n              <Card.Header>Visit More LinkedIn Products</Card.Header>\n              <Card.Body>\n                <Row sm={4}>\n                  <Col>\n                    <Button className=\"mt-2 btn-light\">\n                      <FontAwesomeIcon icon={faChartBar} size=\"2x\" />\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Button className=\"mt-2 btn-light\">\n                      <FontAwesomeIcon icon={faCertificate} size=\"2x\" />\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Button className=\"mt-2 btn-light\">\n                      <FontAwesomeIcon icon={faChevronCircleDown} size=\"2x\" />\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Button className=\"mt-2 btn-light\">\n                      <FontAwesomeIcon icon={faCompress} size=\"2x\" />\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Button className=\"mt-2 btn-light\">\n                      <FontAwesomeIcon icon={faUserFriends} size=\"2x\" />\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Button className=\"mt-2 btn-light\">\n                      <FontAwesomeIcon icon={faInfo} size=\"2x\" />\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Button className=\"mt-2 btn-light\">\n                      <FontAwesomeIcon icon={faMoneyBill} size=\"2x\" />\n                    </Button>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n            <Card style={{ width: \"20rem\", marginTop: \"20px\" }}>\n              <Card.Header>LinkedIn Business Services</Card.Header>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>Talent Solutions</ListGroup.Item>\n                <ListGroup.Item>Sales Solution</ListGroup.Item>\n                <ListGroup.Item>Post a job fro free</ListGroup.Item>\n                <ListGroup.Item>Marketing Solutions</ListGroup.Item>\n                <ListGroup.Item>Learning Solutions</ListGroup.Item>\n              </ListGroup>\n              <Card.Footer> Create a Company Page +</Card.Footer>\n            </Card>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(NavBar);\n",["158","159"],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedLeft.jsx",[],["160","161"],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedRight.jsx",[],["162","163"],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Highlights.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/LatestEducation.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/About.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Experience.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Posts.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/StartPost.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/ExperienceItem.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/AboutLoader.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/EditModal.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/index.js",[],["164","165"],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Footer.jsx",[],["166","167"],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/MainContent.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/MainFeedContent.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedRightFooter.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/ContactInfoPopup.jsx",[],["168","169"],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/EventsModal.jsx",["170"],"import React from \"react\";\nimport { Button, Col, Form, Modal, Row, Image } from \"react-bootstrap\";\n\nclass EventsModal extends React.Component {\n    state = {\n        show: false,\n        background: null,\n        image: null,\n        eventPost: {\n            backgroundImage: [],\n            mainImage: [],\n            role: \"\",\n            company: \"\",\n            area: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            description: \"\",\n        },\n    };\n\n    handelChange = (e) => {\n        let eventPost = { ...this.state.eventPost };\n        let currentId = e.currentTarget.id;\n        eventPost[currentId] = e.currentTarget.value;\n        this.setState({ eventPost });\n    };\n    handelSave = () => {\n        this.props.sendPosts(this.state.eventPost, this.props.EventName);\n    };\n    componentDidMount = () => {\n        this.setState({ show: this.props.show });\n    };\n    componentDidUpdate = (prevProps) => {\n        this.props.show !== prevProps.show && this.setState({ show: this.props.show });\n    };\n    handelImage = (e) => {\n        let id = e.currentTarget.id;\n        let prevState = { ...this.state }\n        prevState.eventPost[id + \"Image\"] = e.target.files[0]\n        prevState[id] = URL.createObjectURL(e.target.files[0]);\n        this.setState(prevState);\n    }\n    render() {\n        return (\n            <Modal show={this.props.show} id=\"postEvent\" onHide={() => this.props.onHide(this.props.title)}>\n                <Modal.Header closeButton onClick={() => this.props.onHide(this.props.title)}>\n                    <Modal.Title>Create event</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div>\n                        <label className=\"upload\">Upload\n                            <input\n                                className=\"position-relative\"\n                                id=\"background\"\n                                name=\"input\"\n                                onChange={this.handelImage}\n                                type=\"file\"\n                                accept=\"image/x-png,image/gif,image/jpeg\"\n                            />\n                        </label>\n\n                        <Row >\n                            {this.state.background !== null ? <Image src={this.state.background} fluid /> : <Image src=\"https://place-hold.it/400x200?text=\" fluid />}\n                        </Row>\n                    </div>\n                    <div className=\"small-image ml-4\" style={{ height: \"100px\", width: \"100px\" }} >\n                        <label className=\"upload\">Upload\n                            <input\n                                className=\"position-relative\"\n                                id=\"image\"\n                                name=\"input\"\n                                onChange={this.handelImage}\n                                type=\"file\"\n                                accept=\"image/x-png,image/gif,image/jpeg\"\n                            />\n                        </label>\n\n                        <Row style={{ height: \"100px\", width: \"100px\" }} >\n                            {this.state.image !== null ? <Image src={this.state.image} fluid thumbnail /> : <Image src=\"https://place-hold.it/100x100?text=\" fluid rounded thumbnail />}\n                        </Row>\n\n                    </div>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Event Name*</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                id=\"name\"\n                                value={this.state.eventPost.name}\n                                onChange={this.handelChange}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Location</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                id=\"area\"\n                                placeholder=\"Ex: London, United Kingdom\"\n                                value={this.state.eventPost.area}\n                                onChange={this.handelChange}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Check type=\"checkbox\" label=\"I am currently working in this role\" />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Start Date*</Form.Label>\n                            <Form.Control\n                                type=\"date\"\n                                id=\"startDate\"\n                                value={this.state.eventPost.startDate}\n                                onChange={this.handelChange}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>End Date*</Form.Label>\n                            <Form.Control\n                                type=\"date\"\n                                id=\"endDate\"\n                                value={this.state.eventPost.endDate}\n                                onChange={this.handelChange}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Check type=\"checkbox\" label=\"Public event\" />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Check type=\"checkbox\" label=\"Private event\" />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                rows={3}\n                                id=\"description\"\n                                value={this.state.eventPost.description}\n                                onChange={this.handelChange}\n                                required\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"primary\" className=\"rounded-pill\" onClick={this.handelSave}>\n                        Save\n                        </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default EventsModal;\n","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/AddModal.jsx",["171","172"],"import React from \"react\";\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\n\nclass AddModal extends React.Component {\n  state = {\n    show: false,\n    experience: {\n      role: \"\",\n      company: \"\",\n      area: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      description: \"\",\n    },\n  };\n\n  handelChange = (e) => {\n    let experience = { ...this.state.experience };\n    let currentId = e.currentTarget.id;\n    experience[currentId] = e.currentTarget.value;\n    this.setState({ experience });\n  };\n  handelSave = (event) => {\n    event.preventDefault();\n    this.props.addExperiencePost(this.state.experience);\n  };\n  componentDidMount = () => {\n    this.setState({ show: this.props.show });\n  };\n  componentDidUpdate = (prevProps) => {\n    this.props.show !== prevProps.show && this.setState({ show: this.props.show });\n  };\n\n  render() {\n    return (\n      <Modal show={this.state.show} id=\"addModal\" onHide={() => this.props.addModalToggleHandler()}>\n        <Form onSubmit={this.handelSave}>\n          <Modal.Header closeButton onClick={() => this.props.addModalToggleHandler()}>\n            <Modal.Title>Add Experience</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form.Group>\n              <Form.Label>Title*</Form.Label>\n              <Form.Control\n                type=\"text\"\n                id=\"role\"\n                placeholder=\"Ex. Retail Sales Manager\"\n                value={this.state.experience.role}\n                onChange={this.handelChange}\n                required\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Employment type</Form.Label>\n              <Form.Control as=\"select\">\n                <option>-</option>\n                <option>Full-time</option>\n                <option>Part-time</option>\n                <option>Self-employed</option>\n                <option>Freelance</option>\n                <option>Contract</option>\n                <option>Internship</option>\n              </Form.Control>\n            </Form.Group>\n            <a>Learn more</a>\n            <Form.Group>\n              <Form.Label>Company*</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Ex: Microsoft\"\n                id=\"company\"\n                value={this.state.experience.company}\n                onChange={this.handelChange}\n                required\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Location</Form.Label>\n              <Form.Control\n                type=\"text\"\n                id=\"area\"\n                placeholder=\"Ex: London, United Kingdom\"\n                value={this.state.experience.area}\n                onChange={this.handelChange}\n                required\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Check type=\"checkbox\" label=\"I am currently working in this role\" />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Start Date*</Form.Label>\n              <Form.Control\n                type=\"date\"\n                id=\"startDate\"\n                value={this.state.experience.startDate}\n                onChange={this.handelChange}\n                required\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>End Date*</Form.Label>\n              <Form.Control\n                type=\"date\"\n                id=\"endDate\"\n                value={this.state.experience.endDate}\n                onChange={this.handelChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Check type=\"checkbox\" label=\"Update my industry\" />\n            </Form.Group>\n            <Form.Group>\n              <Form.Check type=\"checkbox\" label=\"Update my headline\" />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                id=\"description\"\n                value={this.state.experience.description}\n                onChange={this.handelChange}\n                required\n              />\n            </Form.Group>\n            <small>Media</small>\n            <small>Add or link to external documents, photos, sites, videos, and presentations.</small>\n            <Row className=\" justify-content-around\">\n              <Col>\n                <Button variant=\"primary\" className=\"w-100 rounded-pill\">\n                  Upload\n                </Button>\n              </Col>\n              <Col>\n                <Button variant=\"outline-primary\" className=\"w-100 rounded-pill\">\n                  Link\n                </Button>\n              </Col>\n            </Row>\n            <a>Supported formats</a>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Row className=\"share\">\n              <Form.Group>\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"If enabled, your network may be informed of job changes, education changes, and work anniversaries. Learn how these are shared and when\"\n                />\n              </Form.Group>\n            </Row>\n            <Button variant=\"primary\" className=\"rounded-pill\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default AddModal;\n","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/loaders/ExpEducationLoaders.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/PostComments.jsx",["173","174"],"import React from 'react';\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport Moment from 'react-moment';\n\nclass Comments extends React.Component {\n    state = {\n        comments: [],\n        loaded: false,\n        addComment: \"\",\n    }\n    componentDidMount = () => {\n        setTimeout(() => {\n            this.getComments(this.props.postId)\n        }, 1000);\n    }\n    getComments = async (id) => {\n\n    }\n    handleChange = (e) => {\n\n    }\n    render() {\n        const { user, postId } = this.props\n        const { comments, loaded, addComment } = this.state\n        return <div className=\"mt-2 pt-2\" >\n            <Col>\n                <div className=\"row\">\n                    <Col sm={1}>\n                        <Image src=\"https://mpng.subpng.com/20180802/icj/kisspng-user-profile-default-computer-icons-network-video-the-foot-problems-of-the-disinall-foot-care-founde-5b6346121ec769.0929994515332326581261.jpg\" style={{ width: \"40px\", height: \"40px\" }} roundedCircle />\n                    </Col>\n                    <Col sm={10} className=\"p-0\">\n                        <Form >\n                            <Form.Group>\n                                <Form.Control type=\"text\" className=\"rounded-pill w-100 ml-3 p-3\" id={addComment} value={addComment} onChange={this.handleChange} placeholder=\"Add a comment...\" />\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </div>\n                <Row>\n                    {loaded ? comments.length > 0 && comments.map((comment) =>\n                        <Col>\n                            <h6>{comment.user}</h6>\n                            <small className=\"text-muted\"><Moment fromNow>{comment.createdAt}</Moment> </small>\n                            <p>{comment.text}</p>\n                        </Col>\n                    ) : <p>Loading...</p>}\n                </Row>\n            </Col>\n        </div>;\n    }\n}\n\nexport default Comments;","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/LatestExperience.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedMostViewedCourses.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Jobs.jsx",["175","176","177","178","179","180","181","182"],"import React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  Row,\n  InputGroup,\n  FormControl,\n  Container,\n  Card,\n  Dropdown,\n} from \"react-bootstrap\";\n\nexport default class Jobs extends Component {\n  render() {\n    return (\n      <Container className=\"mt-5\">\n        <div className=\"p-3 mb-2 bg-white text-secondary d-flex \">\n          <p className=\"font-weight-bold mr-3\">\n            <i class=\"fas fa-bookmark pr-2\"></i>My Jobs\n          </p>\n          <p className=\"font-weight-bold mr-3\">\n            <i class=\"fas fa-bell pr-2\"></i>My Alerts\n          </p>\n          <p className=\"font-weight-bold mr-3\">\n            <i class=\"fas fa-money-bill-alt pr-2\"></i>Salary\n          </p>\n          <p className=\"font-weight-bold mr-3\">\n            <i class=\"fas fa-file pr-2\"></i>Interview Prep\n          </p>\n\n          <p className=\"mr-5 pr-5\">\n            <Dropdown>\n              <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                more\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </p>\n          <span className=\" ml-5  \">\n            <a href=\"/talentSolutions\">\n              <button\n                className=\" ml-5  pl-5\"\n                style={{ borderRadius: \"16px\" }}\n                type=\"button\"\n                class=\"btn btn-outline-info \"\n              >\n                <i class=\"fas fa-edit\"></i>\n                Post for a free job\n              </button>\n            </a>\n          </span>\n        </div>\n        <div\n          className=\" d-flex flex-column mb-3\"\n          style={{\n            backgroundColor: \"rgb(179, 195, 201)\",\n            height: \"150px\",\n            borderRadius: \"24px\",\n          }}\n        >\n          <div className=\"align-self-center font-weight-light\">\n            <h4 className=\" font-weight-light\">Search for your next Job</h4>\n          </div>\n          <div className=\" d-flex justify-content-between \">\n            <div> </div>\n            <div style={{ width: \"400px\" }}>\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  placeholder=\"Search by title skill or company\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </InputGroup>\n            </div>\n\n            <div className=\"mr-0\" style={{ width: \"400px\" }}>\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  placeholder=\"City State or zip code\"\n                  aria-label=\"Recipient's username\"\n                  aria-describedby=\"basic-addon2\"\n                />\n              </InputGroup>\n            </div>\n\n            <div style={{ width: \"200px\" }}>\n              <Button style={{ borderRadius: \" 1rem\", width: \"150px\" }}>\n                Search\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <p className=\" font-weight-bold mb-0 justify-content-center\">\n            Recommended for you\n          </p>\n          <p className=\" font-weight-light\">\n            Based on your profile and search history\n          </p>\n        </div>\n        <div\n          className=\" d-flex flex-column mb-3 align-items-center\"\n          style={{\n            backgroundColor: \"white\",\n\n            borderRadius: \"16px\",\n          }}\n        >\n          <Row className=\"mb-3\">\n            <Col>\n              <Card style={{ width: \"16rem\", height: \"18rem\" }}>\n                <Card.Body>\n                  <img className=\"img-card-jobs\" />\n                  <Card.Title>AI Consultant</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    London\n                  </Card.Subtitle>\n                  <Card.Text></Card.Text>\n                  <Card.Link href=\"#\">Actively Recruiting</Card.Link>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card style={{ width: \"16rem\", height: \"18rem\" }}>\n                <Card.Body>\n                  <img className=\"img-card-jobs\" />\n                  <Card.Title>Machine Learning Analyst</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    Spain\n                  </Card.Subtitle>\n                  <Card.Text></Card.Text>\n                  <Card.Link href=\"#\">Actively Recruiting</Card.Link>\n                </Card.Body>\n              </Card>\n            </Col>\n\n            <Col>\n              <Card style={{ width: \"16rem\", height: \"18rem\" }}>\n                <Card.Body>\n                  <img className=\"img-card-jobs\" />\n                  <Card.Title>Data Analyst</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    Prague\n                  </Card.Subtitle>\n                  <Card.Text></Card.Text>\n                  <Card.Link href=\"#\">Actively Recruiting</Card.Link>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card style={{ width: \"16rem\", height: \"18rem\" }}>\n                <Card.Body>\n                  <img className=\"img-card-jobs\" />\n                  <Card.Title>React Developer</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    Berlin\n                  </Card.Subtitle>\n                  <Card.Text></Card.Text>\n                  <Card.Link href=\"#\">Actively Recruiting</Card.Link>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Card style={{ width: \"16rem\", height: \"18rem\" }}>\n                <Card.Body>\n                  <img className=\"img-card-jobs\" />\n                  <Card.Title>Mobile Developer</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">NYC</Card.Subtitle>\n                  <Card.Text></Card.Text>\n                  <Card.Link href=\"#\">Actively Recruiting</Card.Link>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card style={{ width: \"16rem\", height: \"18rem\" }}>\n                <Card.Body>\n                  <img className=\"img-card-jobs\" />\n                  <Card.Title>Financial Analyst</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    Paris\n                  </Card.Subtitle>\n                  <Card.Text></Card.Text>\n                  <Card.Link href=\"#\">Actively Recruiting</Card.Link>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card style={{ width: \"16rem\", height: \"18rem\" }}>\n                <Card.Body>\n                  <img className=\"img-card-jobs\" />\n                  <Card.Title>Android Developer</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    Dubai\n                  </Card.Subtitle>\n                  <Card.Text></Card.Text>\n                  <Card.Link href=\"#\">Actively Recruiting</Card.Link>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card style={{ width: \"16rem\", height: \"18rem\" }}>\n                <Card.Body>\n                  <img className=\"img-card-jobs\" />\n                  <Card.Title>FullStack Developer</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    London\n                  </Card.Subtitle>\n                  <Card.Text></Card.Text>\n                  <Card.Link href=\"#\">Actively Recruiting</Card.Link>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    );\n  }\n}\n","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Skills.jsx",["183"],"import React, { Component } from \"react\";\nimport { Container, ListGroup } from \"react-bootstrap\";\nexport default class Skills extends Component {\n  render() {\n    return (\n      <div>\n        <div id=\"skills-main-container\" className=\"skills-contain mb-3\">\n          <div className=\"py-3 px-4\">\n            <h4 className=\"font-weight-normal\">Skills & endorsments</h4>\n            <ListGroup>\n              <ListGroup.Item variant=\"light\" className=\"brdr-bottom\">\n                <h6>Skill 1</h6>\n                <div className=\"d-flex align-items-center\">\n                  <div className=\"skills-img-placeholder mr-3\"></div>\n                  <small className=\"mb-0\">\n                    Endorsed by <span className=\"font-weight-bold\">Name, who is highly skilled at this.</span>\n                  </small>\n                </div>\n              </ListGroup.Item>\n              <ListGroup.Item variant=\"light\" className=\"brdr-bottom\">\n                <h6>Skill 2</h6>\n                <div className=\"d-flex align-items-center\">\n                  <small className=\"mb-0\">\n                    <span className=\"font-weight-bold\">Name and x connections</span> have given endorsements for this\n                    skill.\n                  </small>\n                </div>\n              </ListGroup.Item>\n              <ListGroup.Item variant=\"light\" className=\"brdr-bottom\">\n                <h6>Skill 3</h6>\n                <div className=\"d-flex align-items-center\">\n                  <small className=\"mb-0\">\n                    <span className=\"font-weight-bold\">Name and x connections</span> have given endorsements for this\n                    skill.\n                  </small>\n                </div>\n              </ListGroup.Item>\n            </ListGroup>\n          </div>\n          <div className=\"see-all-btn py-2 font-weight-bold text-center brdr-top\" style={{ cursor: \"pointer\" }}>\n            Show more\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Main.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/SideBar.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedMiddle.jsx",["184","185","186"],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Education.jsx",["187"],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/ArticleModal.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/FeedAddToYourFeed.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/loaders/PeopleLoaders.jsx",[],"/Users/yazidrahmouni/Desktop/gitrepository/Build-Week-LinkedIn-Clone/linkedin-clone/src/components/Learning.jsx",[],{"ruleId":"188","severity":1,"message":"189","line":14,"column":27,"nodeType":"190","messageId":"191","endLine":14,"endColumn":45},{"ruleId":"188","severity":1,"message":"192","line":15,"column":27,"nodeType":"190","messageId":"191","endLine":15,"endColumn":45},{"ruleId":"188","severity":1,"message":"193","line":18,"column":25,"nodeType":"190","messageId":"191","endLine":18,"endColumn":41},{"ruleId":"194","severity":1,"message":"195","line":159,"column":49,"nodeType":"196","messageId":"197","endLine":159,"endColumn":50},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"198","replacedBy":"202"},{"ruleId":"200","replacedBy":"203"},{"ruleId":"198","replacedBy":"204"},{"ruleId":"200","replacedBy":"205"},{"ruleId":"198","replacedBy":"206"},{"ruleId":"200","replacedBy":"207"},{"ruleId":"198","replacedBy":"208"},{"ruleId":"200","replacedBy":"209"},{"ruleId":"198","replacedBy":"210"},{"ruleId":"200","replacedBy":"211"},{"ruleId":"188","severity":1,"message":"212","line":2,"column":18,"nodeType":"190","messageId":"191","endLine":2,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":65,"column":13,"nodeType":"215","endLine":65,"endColumn":16},{"ruleId":"213","severity":1,"message":"214","line":141,"column":13,"nodeType":"215","endLine":141,"endColumn":16},{"ruleId":"188","severity":1,"message":"216","line":23,"column":17,"nodeType":"190","messageId":"191","endLine":23,"endColumn":21},{"ruleId":"188","severity":1,"message":"217","line":23,"column":23,"nodeType":"190","messageId":"191","endLine":23,"endColumn":29},{"ruleId":"218","severity":1,"message":"219","line":117,"column":19,"nodeType":"215","endLine":117,"endColumn":52},{"ruleId":"218","severity":1,"message":"219","line":130,"column":19,"nodeType":"215","endLine":130,"endColumn":52},{"ruleId":"218","severity":1,"message":"219","line":144,"column":19,"nodeType":"215","endLine":144,"endColumn":52},{"ruleId":"218","severity":1,"message":"219","line":157,"column":19,"nodeType":"215","endLine":157,"endColumn":52},{"ruleId":"218","severity":1,"message":"219","line":172,"column":19,"nodeType":"215","endLine":172,"endColumn":52},{"ruleId":"218","severity":1,"message":"219","line":183,"column":19,"nodeType":"215","endLine":183,"endColumn":52},{"ruleId":"218","severity":1,"message":"219","line":196,"column":19,"nodeType":"215","endLine":196,"endColumn":52},{"ruleId":"218","severity":1,"message":"219","line":209,"column":19,"nodeType":"215","endLine":209,"endColumn":52},{"ruleId":"188","severity":1,"message":"220","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":19},{"ruleId":"188","severity":1,"message":"221","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":21},{"ruleId":"188","severity":1,"message":"222","line":1,"column":37,"nodeType":"190","messageId":"191","endLine":1,"endColumn":44},{"ruleId":"188","severity":1,"message":"223","line":146,"column":13,"nodeType":"190","messageId":"191","endLine":146,"endColumn":21},{"ruleId":"188","severity":1,"message":"220","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":19},"no-unused-vars","'setCurrentUserName' is assigned a value but never used.","Identifier","unusedVar","'setCurrentJobTitle' is assigned a value but never used.","'setCurrentUserID' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["224"],"no-negated-in-lhs",["225"],["224"],["225"],["224"],["225"],["224"],["225"],["224"],["225"],["224"],["225"],"'Col' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'user' is assigned a value but never used.","'postId' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Container' is defined but never used.","'faNewspaper' is defined but never used.","'faVideo' is defined but never used.","'jobTitle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]